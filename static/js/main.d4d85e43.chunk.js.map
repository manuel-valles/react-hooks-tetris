{"version":3,"sources":["img/background.jpg","gameHelpers.js","components/styles/StyledTetris.js","tetrominos.js","hooks/useStage.js","components/styles/StyledStage.js","components/styles/StyledCell.js","components/Cell.js","components/Stage.js","components/styles/StyledDisplay.js","components/Display.js","components/styles/StyledStartButton.js","components/StartButton.js","components/Tetris.js","hooks/usePlayer.js","hooks/useGameStatus.js","hooks/useInterval.js","App.js","index.js"],"names":["module","exports","createStage","Array","from","fill","checkCollision","player","stage","moveX","x","moveY","y","tetromino","length","pos","StyledTetrisWrapper","styled","div","background","StyledTetris","TETROMINOS","0","shape","color","I","J","L","O","S","T","Z","randomTetromino","randomLetter","Math","floor","random","useStage","resetPlayer","useState","setStage","rowsCleared","setRowsCleared","useEffect","updateStage","prevStage","newStage","map","row","cell","forEach","value","collided","reduce","acc","findIndex","prev","unshift","push","sweepRows","StyledStage","props","height","width","StyledCell","type","React","memo","Stage","key","StyledDisplay","gameOver","Display","text","StyledStartButton","button","StartButton","callback","onClick","Tetris","dropTime","setDropTime","setGameOver","setPlayer","rotate","dir","rotatedTetro","_","index","col","reverse","useCallback","STAGE_WIDTH","clonedPlayer","JSON","parse","stringify","offset","usePlayer","updatePlayerPos","playerRotate","score","setScore","rows","setRows","level","setLevel","linePoints","calcScore","useGameStatus","movePlayer","drop","console","log","move","keyCode","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","role","tabIndex","onKeyDown","e","onKeyUp","App","className","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d4d85e43.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.2bb7a3d7.jpg\";","const STAGE_WIDTH = 12;\nconst STAGE_HEIGHT = 20;\n\nconst createStage = () =>\n  Array.from(Array(STAGE_HEIGHT), () =>\n    new Array(STAGE_WIDTH).fill([0, 'clear'])\n  );\n\nconst checkCollision = (player, stage, { x: moveX, y: moveY }) => {\n  for (let y = 0; y < player.tetromino.length; y += 1) {\n    for (let x = 0; x < player.tetromino[y].length; x += 1) {\n      // We're in the Tetromino cell\n      if (player.tetromino[y][x] !== 0) {\n        if (\n          // The move is inside the game area: vertical\n          !stage[y + player.pos.y + moveY] ||\n          // and horizontal\n          !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] ||\n          // We're not moving to a clear cell\n          stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !==\n            'clear'\n        ) {\n          return true;\n        }\n      }\n    }\n  }\n};\n\nexport { STAGE_WIDTH, STAGE_HEIGHT, createStage, checkCollision };\n","import styled from 'styled-components';\n\nimport background from '../../img/background.jpg';\n\nconst StyledTetrisWrapper = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background: url(${background}) #000;\n  background-size: cover;\n  overflow: hidden;\n`;\n\nconst StyledTetris = styled.div`\n  display: flex;\n  align-items: flex-start;\n  padding: 40px;\n  margin: 0 auto;\n  max-width: 900px;\n\n  aside {\n    width: 100%;\n    max-width: 200px;\n    display: block;\n    padding: 0 20px;\n  }\n`;\n\nexport { StyledTetrisWrapper, StyledTetris };\n","const TETROMINOS = {\n  0: { shape: [[0]], color: '0, 0, 0' },\n  I: {\n    shape: [\n      [0, 'I', 0, 0],\n      [0, 'I', 0, 0],\n      [0, 'I', 0, 0],\n      [0, 'I', 0, 0],\n    ],\n    color: '80, 227, 230',\n  },\n  J: {\n    shape: [\n      [0, 'J', 0],\n      [0, 'J', 0],\n      ['J', 'J', 0],\n    ],\n    color: '36, 95, 223',\n  },\n  L: {\n    shape: [\n      [0, 'L', 0],\n      [0, 'L', 0],\n      [0, 'L', 'L'],\n    ],\n    color: '223, 173, 36',\n  },\n  O: {\n    shape: [\n      ['O', 'O'],\n      ['O', 'O'],\n    ],\n    color: '223, 217, 36',\n  },\n  S: {\n    shape: [\n      [0, 'S', 'S'],\n      ['S', 'S', 0],\n      [0, 0, 0],\n    ],\n    color: '48, 211, 56',\n  },\n  T: {\n    shape: [\n      [0, 0, 0],\n      ['T', 'T', 'T'],\n      [0, 'T', 0],\n    ],\n    color: '132, 61, 198',\n  },\n  Z: {\n    shape: [\n      ['Z', 'Z', 0],\n      [0, 'Z', 'Z'],\n      [0, 0, 0],\n    ],\n    color: '227, 78, 78',\n  },\n};\n\nconst randomTetromino = () => {\n  const tetrominos = 'IJLOSTZ';\n  const randomLetter =\n    tetrominos[Math.floor(Math.random() * tetrominos.length)];\n  return TETROMINOS[randomLetter];\n};\n\nexport { TETROMINOS, randomTetromino };\n","import { useState, useEffect } from 'react';\nimport { createStage } from '../gameHelpers';\n\nconst useStage = (player, resetPlayer) => {\n  const [stage, setStage] = useState(createStage());\n  const [rowsCleared, setRowsCleared] = useState(0);\n\n  useEffect(() => {\n    setRowsCleared(0);\n    const sweepRows = (newStage) =>\n      newStage.reduce((acc, row) => {\n        if (row.findIndex((cell) => cell[0] === 0) === -1) {\n          setRowsCleared((prev) => prev + 1);\n          acc.unshift(new Array(newStage[0].length).fill([0, 'clear']));\n          return acc;\n        }\n        acc.push(row);\n        return acc;\n      }, []);\n    const updateStage = (prevStage) => {\n      // First flush the stage\n      const newStage = prevStage.map((row) =>\n        row.map((cell) => (cell[1] === 'clear' ? [0, 'clear'] : cell))\n      );\n\n      // Then draw the tetromino\n      player.tetromino.forEach((row, y) => {\n        row.forEach((value, x) => {\n          if (value !== 0) {\n            newStage[y + player.pos.y][x + player.pos.x] = [\n              value,\n              `${player.collided ? 'merged' : 'clear'}`,\n            ];\n          }\n        });\n      });\n\n      // Then check if we collided\n      if (player.collided) {\n        resetPlayer();\n        return sweepRows(newStage);\n      }\n\n      return newStage;\n    };\n\n    setStage((prev) => updateStage(prev));\n  }, [player, resetPlayer]);\n\n  return [stage, setStage, rowsCleared];\n};\n\nexport { useStage };\n","import styled from 'styled-components';\n\nconst StyledStage = styled.div`\n  display: grid;\n  grid-template-rows: repeat(\n    ${(props) => props.height},\n    calc(25vw / ${(props) => props.width})\n  );\n  grid-template-columns: repeat(${(props) => props.width}, 1fr);\n  grid-gap: 1px;\n  border: 2px solid #333;\n  width: 100%;\n  max-width: 25vw \n  background: #111;\n`;\n\nexport { StyledStage };\n","import styled from 'styled-components';\n\nconst StyledCell = styled.div`\n  width: auto;\n  background: rgba(${(props) => props.color}, 0.8);\n  border: ${(props) => (!props.type ? '0px solid' : '4px solid')};\n  border-bottom-color: rgba(${(props) => props.color}, 0.1);\n  border-right-color: rgba(${(props) => props.color}, 1);\n  border-top-color: rgba(${(props) => props.color}, 1);\n  border-left-color: rgba(${(props) => props.color}, 0.3);\n`;\n\nexport { StyledCell };\n","import React from 'react';\nimport { StyledCell } from './styles/StyledCell';\nimport { TETROMINOS } from '../tetrominos';\n\nconst Cell = ({ type }) => (\n  <StyledCell type={type} color={TETROMINOS[type].color} />\n);\n\nexport default React.memo(Cell);\n","import React from 'react';\nimport { StyledStage } from './styles/StyledStage';\n\nimport Cell from './Cell';\n\nconst Stage = ({ stage }) => (\n  <StyledStage width={stage[0].length} height={stage.length}>\n    {stage.map((row) => row.map((cell, x) => <Cell key={x} type={cell[0]} />))}\n  </StyledStage>\n);\n\nexport default Stage;\n","import styled from 'styled-components';\n\nconst StyledDisplay = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  align-items: center;\n  margin: 0 0 20px 0;\n  padding: 20px;\n  border: 4px solid #333;\n  min-height: 30px;\n  width: 100%;\n  border-radius: 20px;\n  color: ${(props) => (props.gameOver ? 'red' : '#999')};\n  background: #000;\n  font-family: Arial, Helvetica, sans-serif;\n  font-size: 0.8rem;\n`;\n\nexport { StyledDisplay };\n","import React from 'react';\nimport { StyledDisplay } from './styles/StyledDisplay';\n\nconst Display = ({ gameOver, text }) => (\n  <StyledDisplay gameOver={gameOver}>{text}</StyledDisplay>\n);\n\nexport default Display;\n","import styled from 'styled-components';\n\nconst StyledStartButton = styled.button`\n  box-sizing: border-box;\n  margin: 0 0 20px 0;\n  padding: 20px;\n  min-height: 30px;\n  width: 100%;\n  border-radius: 20px;\n  border: none;\n  color: white;\n  background: #333;\n  font-family: Arial, Helvetica, sans-serif;\n  font-size: 1rem;\n  outline: none;\n  cursor: pointer;\n`;\n\nexport { StyledStartButton };\n","import React from 'react';\nimport { StyledStartButton } from './styles/StyledStartButton';\n\nconst StartButton = ({ callback }) => (\n  <StyledStartButton onClick={callback}>Start Game</StyledStartButton>\n);\n\nexport default StartButton;\n","import React, { useState } from 'react';\n\nimport { createStage, checkCollision } from '../gameHelpers';\n\n// Styled Components\nimport { StyledTetrisWrapper, StyledTetris } from './styles/StyledTetris';\n\n// Custom Hooks\nimport { useInterval } from '../hooks/useInterval';\nimport { usePlayer } from '../hooks/usePlayer';\nimport { useStage } from '../hooks/useStage';\nimport { useGameStatus } from '../hooks/useGameStatus';\n\n// Components\nimport Stage from './Stage';\nimport Display from './Display';\nimport StartButton from './StartButton';\n\nconst Tetris = () => {\n  const [dropTime, setDropTime] = useState(null);\n  const [gameOver, setGameOver] = useState(false);\n\n  const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\n  const [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\n  const [score, setScore, rows, setRows, level, setLevel] = useGameStatus(\n    rowsCleared\n  );\n\n  const movePlayer = (dir) => {\n    if (!checkCollision(player, stage, { x: dir, y: 0 })) {\n      updatePlayerPos({ x: dir, y: 0 });\n    }\n  };\n\n  const startGame = () => {\n    setStage(createStage());\n    setDropTime(1000);\n    resetPlayer();\n    setGameOver(false);\n    setScore(0);\n    setRows(0);\n    setLevel(0);\n  };\n\n  const drop = () => {\n    // Increase level & speed as player has cleared 10 rows\n    if (rows > level + 1) {\n      setLevel((prev) => prev + 1);\n      setDropTime(1000 / (level + 1) + 200);\n    }\n    if (!checkCollision(player, stage, { x: 0, y: 1 })) {\n      updatePlayerPos({ x: 0, y: 1, collided: false });\n    } else {\n      // Game Over\n      if (player.pos.y < 1) {\n        console.log('GAME OVER!!');\n        setGameOver(true);\n        setDropTime(null);\n      }\n      updatePlayerPos({ x: 0, y: 0, collided: true });\n    }\n  };\n\n  const keyUp = ({ keyCode }) => {\n    if (!gameOver) {\n      if (keyCode === 40) {\n        setDropTime(1000 / (level + 1) + 200);\n      }\n    }\n  };\n\n  const dropPlayer = () => {\n    setDropTime(null);\n    drop();\n  };\n\n  const move = ({ keyCode }) => {\n    if (!gameOver) {\n      // Keys: 37 - left; 39 - right; 40 - down\n      if (keyCode === 37) {\n        movePlayer(-1);\n      } else if (keyCode === 39) {\n        movePlayer(1);\n      } else if (keyCode === 40) {\n        dropPlayer();\n      } else if (keyCode === 38) {\n        playerRotate(stage, 1);\n      }\n    }\n  };\n\n  useInterval(() => {\n    drop();\n  }, dropTime);\n\n  return (\n    <StyledTetrisWrapper\n      role=\"button\"\n      tabIndex=\"0\"\n      onKeyDown={(e) => move(e)}\n      onKeyUp={keyUp}\n    >\n      <StyledTetris>\n        <Stage stage={stage} />\n        <aside>\n          {gameOver ? (\n            <Display gameOver={gameOver} text=\"Game Over\" />\n          ) : (\n            <div>\n              <Display text={`Score: ${score}`} />\n              <Display text={`Rows: ${rows}`} />\n              <Display text={`Level: ${level}`} />\n            </div>\n          )}\n          <StartButton callback={startGame} />\n        </aside>\n      </StyledTetris>\n    </StyledTetrisWrapper>\n  );\n};\n\nexport default Tetris;\n","import { useState, useCallback } from 'react';\n\nimport { checkCollision, STAGE_WIDTH } from '../gameHelpers';\nimport { TETROMINOS, randomTetromino } from '../tetrominos';\n\nconst usePlayer = () => {\n  const [player, setPlayer] = useState({\n    pos: { x: 0, y: 0 },\n    tetromino: TETROMINOS[0].shape,\n    collided: false,\n  });\n\n  const rotate = (tetromino, dir) => {\n    // Transpose: rows to cols\n    const rotatedTetro = tetromino.map((_, index) =>\n      tetromino.map((col) => col[index])\n    );\n    // Reverse each row\n    if (dir > 0) return rotatedTetro.map((row) => row.reverse());\n  };\n\n  const playerRotate = (stage, dir) => {\n    const clonedPlayer = JSON.parse(JSON.stringify(player));\n    clonedPlayer.tetromino = rotate(clonedPlayer.tetromino, dir);\n\n    const pos = clonedPlayer.pos.x;\n    let offset = 1;\n    while (checkCollision(clonedPlayer, stage, { x: 0, y: 0 })) {\n      clonedPlayer.pos.x += offset;\n      offset = -(offset + (offset > 0 ? 1 : -1));\n      if (offset > clonedPlayer.tetromino[0].length) {\n        rotate(clonedPlayer.tetromino, -dir);\n        clonedPlayer.pos.x = pos;\n        return;\n      }\n    }\n\n    setPlayer(clonedPlayer);\n  };\n\n  const updatePlayerPos = ({ x, y, collided }) => {\n    setPlayer((prev) => ({\n      ...prev,\n      pos: { x: (prev.pos.x += x), y: (prev.pos.y += y) },\n      collided,\n    }));\n  };\n\n  const resetPlayer = useCallback(() => {\n    setPlayer({\n      pos: { x: STAGE_WIDTH / 2 - 2, y: 0 },\n      tetromino: randomTetromino().shape,\n      collided: false,\n    });\n  }, []);\n\n  return [player, updatePlayerPos, resetPlayer, playerRotate];\n};\n\nexport { usePlayer };\n","import { useState, useEffect, useCallback } from 'react';\n\nconst useGameStatus = (rowsCleared) => {\n  const [score, setScore] = useState(0);\n  const [rows, setRows] = useState(0);\n  const [level, setLevel] = useState(0);\n\n  // Points by how many rows are cleared\n  const linePoints = [40, 100, 300, 1200];\n\n  const calcScore = useCallback(() => {\n    if (rowsCleared > 0) {\n      setScore((prev) => prev + linePoints[rowsCleared - 1] * (level + 1));\n      setRows((prev) => prev + rowsCleared);\n    }\n  }, [level, linePoints, rowsCleared]);\n\n  useEffect(() => {\n    calcScore();\n  }, [calcScore, rowsCleared, score]);\n\n  return [score, setScore, rows, setRows, level, setLevel];\n};\n\nexport { useGameStatus };\n","import { useEffect, useRef } from 'react';\n\nconst useInterval = (callback, delay) => {\n  const savedCallback = useRef();\n  // Remember the latest callback\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n};\n\nexport { useInterval };\n","import React from 'react';\nimport Tetris from './components/Tetris';\n\nconst App = () => (\n  <div className=\"App\">\n    <Tetris />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}