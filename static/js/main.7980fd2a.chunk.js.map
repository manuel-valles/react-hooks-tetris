{"version":3,"sources":["gameHelpers.js","components/styles/StyledTetris.js","tetrominos.js","hooks/useStage.js","components/styles/StyledStage.js","components/styles/StyledCell.js","components/Cell.js","components/Stage.js","components/styles/StyledDisplay.js","components/Display.js","components/styles/StyledStartButton.js","components/StartButton.js","components/Tetris.js","hooks/usePlayer.js","hooks/useGameStatus.js","hooks/useInterval.js","App.js","index.js"],"names":["createStage","Array","from","fill","checkCollision","player","stage","moveX","x","moveY","y","tetromino","length","pos","StyledTetrisWrapper","styled","div","StyledTetris","animStar","keyframes","StyledStar","TETROMINOS","0","shape","color","I","J","L","O","S","T","Z","randomTetromino","randomLetter","Math","floor","random","useStage","resetPlayer","useState","setStage","rowsCleared","setRowsCleared","useEffect","updateStage","prevStage","newStage","map","row","cell","forEach","value","collided","reduce","acc","findIndex","prev","unshift","push","sweepRows","StyledStage","props","height","width","StyledCell","type","React","memo","Stage","key","StyledDisplay","gameOver","Display","text","StyledStartButton","button","StartButton","callback","onClick","Tetris","dropTime","setDropTime","setGameOver","setPlayer","rotate","dir","rotatedTetro","_","index","col","reverse","useCallback","STAGE_WIDTH","clonedPlayer","JSON","parse","stringify","offset","usePlayer","updatePlayerPos","playerRotate","score","setScore","rows","setRows","level","setLevel","linePoints","calcScore","useGameStatus","movePlayer","drop","console","log","move","keyCode","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","role","tabIndex","onKeyDown","e","onKeyUp","App","className","ReactDOM","render","document","getElementById"],"mappings":"kPAGMA,EAAc,kBAClBC,MAAMC,KAAKD,MAHQ,KAGa,kBAC9B,IAAIA,MALY,IAKOE,KAAK,CAAC,EAAG,cAG9BC,EAAiB,SAACC,EAAQC,EAAT,GACrB,IADiE,IAAvBC,EAAsB,EAAzBC,EAAaC,EAAY,EAAfC,EACxCA,EAAI,EAAGA,EAAIL,EAAOM,UAAUC,OAAQF,GAAK,EAChD,IAAK,IAAIF,EAAI,EAAGA,EAAIH,EAAOM,UAAUD,GAAGE,OAAQJ,GAAK,EAEnD,GAA+B,IAA3BH,EAAOM,UAAUD,GAAGF,MAGnBF,EAAMI,EAAIL,EAAOQ,IAAIH,EAAID,KAEzBH,EAAMI,EAAIL,EAAOQ,IAAIH,EAAID,GAAOD,EAAIH,EAAOQ,IAAIL,EAAID,IAGlD,UADFD,EAAMI,EAAIL,EAAOQ,IAAIH,EAAID,GAAOD,EAAIH,EAAOQ,IAAIL,EAAID,GAAO,IAG1D,OAAO,G,+hSCpBjB,IAAMO,EAAsBC,IAAOC,IAAV,KAQnBC,EAAeF,IAAOC,IAAV,KAeZE,EAAWC,YAAH,KASRC,EAAaL,IAAOC,IAAV,IAuDDE,G,OCzFTG,EAAa,CACjBC,EAAG,CAAEC,MAAO,CAAC,CAAC,IAAKC,MAAO,WAC1BC,EAAG,CACDF,MAAO,CACL,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,IAEdC,MAAO,gBAETE,EAAG,CACDH,MAAO,CACL,CAAC,EAAG,IAAK,GACT,CAAC,EAAG,IAAK,GACT,CAAC,IAAK,IAAK,IAEbC,MAAO,eAETG,EAAG,CACDJ,MAAO,CACL,CAAC,EAAG,IAAK,GACT,CAAC,EAAG,IAAK,GACT,CAAC,EAAG,IAAK,MAEXC,MAAO,gBAETI,EAAG,CACDL,MAAO,CACL,CAAC,IAAK,KACN,CAAC,IAAK,MAERC,MAAO,gBAETK,EAAG,CACDN,MAAO,CACL,CAAC,EAAG,IAAK,KACT,CAAC,IAAK,IAAK,GACX,CAAC,EAAG,EAAG,IAETC,MAAO,eAETM,EAAG,CACDP,MAAO,CACL,CAAC,EAAG,EAAG,GACP,CAAC,IAAK,IAAK,KACX,CAAC,EAAG,IAAK,IAEXC,MAAO,gBAETO,EAAG,CACDR,MAAO,CACL,CAAC,IAAK,IAAK,GACX,CAAC,EAAG,IAAK,KACT,CAAC,EAAG,EAAG,IAETC,MAAO,gBAILQ,EAAkB,WACtB,IACMC,EADa,UAENC,KAAKC,MAAMD,KAAKE,SAFV,UAEgCxB,SACnD,OAAOS,EAAWY,IC7DdI,EAAW,SAAChC,EAAQiC,GAAiB,IAAD,EACdC,mBAASvC,KADK,mBACjCM,EADiC,KAC1BkC,EAD0B,OAEFD,mBAAS,GAFP,mBAEjCE,EAFiC,KAEpBC,EAFoB,KA8CxC,OA1CAC,qBAAU,WACRD,EAAe,GACf,IAUME,EAAc,SAACC,GAEnB,IAAMC,EAAWD,EAAUE,KAAI,SAACC,GAAD,OAC7BA,EAAID,KAAI,SAACE,GAAD,MAAuB,UAAZA,EAAK,GAAiB,CAAC,EAAG,SAAWA,QAgB1D,OAZA5C,EAAOM,UAAUuC,SAAQ,SAACF,EAAKtC,GAC7BsC,EAAIE,SAAQ,SAACC,EAAO3C,GACJ,IAAV2C,IACFL,EAASpC,EAAIL,EAAOQ,IAAIH,GAAGF,EAAIH,EAAOQ,IAAIL,GAAK,CAC7C2C,EAD6C,UAE1C9C,EAAO+C,SAAW,SAAW,iBAOpC/C,EAAO+C,UACTd,IA9Bc,SAACQ,GAAD,OAChBA,EAASO,QAAO,SAACC,EAAKN,GACpB,OAAgD,IAA5CA,EAAIO,WAAU,SAACN,GAAD,OAAsB,IAAZA,EAAK,OAC/BP,GAAe,SAACc,GAAD,OAAUA,EAAO,KAChCF,EAAIG,QAAQ,IAAIxD,MAAM6C,EAAS,GAAGlC,QAAQT,KAAK,CAAC,EAAG,WAC5CmD,IAETA,EAAII,KAAKV,GACFM,KACN,IAsBMK,CAAUb,IAGZA,GAGTN,GAAS,SAACgB,GAAD,OAAUZ,EAAYY,QAC9B,CAACnD,EAAQiC,IAEL,CAAChC,EAAOkC,EAAUC,I,gTC/C3B,IAAMmB,EAAc7C,IAAOC,IAAV,KAGX,SAAC6C,GAAD,OAAWA,EAAMC,UACL,SAACD,GAAD,OAAWA,EAAME,SAED,SAACF,GAAD,OAAWA,EAAME,S,4RCNnD,IAAMC,EAAajD,IAAOC,IAAV,KAEK,SAAC6C,GAAD,OAAWA,EAAMrC,SAC1B,SAACqC,GAAD,OAAaA,EAAMI,KAAqB,YAAd,eACR,SAACJ,GAAD,OAAWA,EAAMrC,SAClB,SAACqC,GAAD,OAAWA,EAAMrC,SACnB,SAACqC,GAAD,OAAWA,EAAMrC,SAChB,SAACqC,GAAD,OAAWA,EAAMrC,SCD9B0C,MAAMC,MAJR,SAAC,GAAD,IAAGF,EAAH,EAAGA,KAAH,OACX,kBAACD,EAAD,CAAYC,KAAMA,EAAMzC,MAAOH,EAAW4C,GAAMzC,WCMnC4C,EAND,SAAC,GAAD,IAAG9D,EAAH,EAAGA,MAAH,OACZ,kBAACsD,EAAD,CAAaG,MAAOzD,EAAM,GAAGM,OAAQkD,OAAQxD,EAAMM,QAChDN,EAAMyC,KAAI,SAACC,GAAD,OAASA,EAAID,KAAI,SAACE,EAAMzC,GAAP,OAAa,kBAAC,EAAD,CAAM6D,IAAK7D,EAAGyD,KAAMhB,EAAK,a,qXCLtE,IAAMqB,EAAgBvD,IAAOC,IAAV,KAUR,SAAC6C,GAAD,OAAYA,EAAMU,SAAW,MAAQ,UCLjCC,EAJC,SAAC,GAAD,IAAGD,EAAH,EAAGA,SAAUE,EAAb,EAAaA,KAAb,OACd,kBAACH,EAAD,CAAeC,SAAUA,GAAWE,I,yWCFtC,IAAMC,EAAoB3D,IAAO4D,OAAV,KCKRC,EAJK,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAClB,kBAACH,EAAD,CAAmBI,QAASD,GAA5B,UC0HaE,EAxGA,WAAO,IAAD,EACaxC,mBAAS,MADtB,mBACZyC,EADY,KACFC,EADE,OAEa1C,oBAAS,GAFtB,mBAEZgC,EAFY,KAEFW,EAFE,OCjBH,WAAO,IAAD,EACM3C,mBAAS,CACnC1B,IAAK,CAAEL,EAAG,EAAGE,EAAG,GAChBC,UAAWU,EAAW,GAAGE,MACzB6B,UAAU,IAJU,mBACf/C,EADe,KACP8E,EADO,KAOhBC,EAAS,SAACzE,EAAW0E,GAEzB,IAAMC,EAAe3E,EAAUoC,KAAI,SAACwC,EAAGC,GAAJ,OACjC7E,EAAUoC,KAAI,SAAC0C,GAAD,OAASA,EAAID,SAG7B,GAAIH,EAAM,EAAG,OAAOC,EAAavC,KAAI,SAACC,GAAD,OAASA,EAAI0C,cA8B9CpD,EAAcqD,uBAAY,WAC9BR,EAAU,CACRtE,IAAK,CAAEL,EAAGoF,EAAqBlF,EAAG,GAClCC,UAAWqB,IAAkBT,MAC7B6B,UAAU,MAEX,IAEH,MAAO,CAAC/C,EAhBgB,SAAC,GAAwB,IAAtBG,EAAqB,EAArBA,EAAGE,EAAkB,EAAlBA,EAAG0C,EAAe,EAAfA,SAC/B+B,GAAU,SAAC3B,GAAD,mBAAC,eACNA,GADK,IAER3C,IAAK,CAAEL,EAAIgD,EAAK3C,IAAIL,GAAKA,EAAIE,EAAI8C,EAAK3C,IAAIH,GAAKA,GAC/C0C,iBAY6Bd,EAnCZ,SAAChC,EAAO+E,GAC3B,IAAMQ,EAAeC,KAAKC,MAAMD,KAAKE,UAAU3F,IAC/CwF,EAAalF,UAAYyE,EAAOS,EAAalF,UAAW0E,GAIxD,IAFA,IAAMxE,EAAMgF,EAAahF,IAAIL,EACzByF,EAAS,EACN7F,EAAeyF,EAAcvF,EAAO,CAAEE,EAAG,EAAGE,EAAG,KAGpD,GAFAmF,EAAahF,IAAIL,GAAKyF,GACtBA,IAAWA,GAAUA,EAAS,EAAI,GAAK,KAC1BJ,EAAalF,UAAU,GAAGC,OAGrC,OAFAwE,EAAOS,EAAalF,WAAY0E,QAChCQ,EAAahF,IAAIL,EAAIK,GAKzBsE,EAAUU,KDXiDK,GAJ1C,mBAIZ7F,EAJY,KAIJ8F,EAJI,KAIa7D,EAJb,KAI0B8D,EAJ1B,OAKoB/D,EAAShC,EAAQiC,GALrC,mBAKZhC,EALY,KAKLkC,EALK,OEpBC,SAACC,GAAiB,IAAD,EACXF,mBAAS,GADE,mBAC9B8D,EAD8B,KACvBC,EADuB,OAEb/D,mBAAS,GAFI,mBAE9BgE,EAF8B,KAExBC,EAFwB,OAGXjE,mBAAS,GAHE,mBAG9BkE,EAH8B,KAGvBC,EAHuB,KAM/BC,EAAa,CAAC,GAAI,IAAK,IAAK,MAE5BC,EAAYjB,uBAAY,WACxBlD,EAAc,IAChB6D,GAAS,SAAC9C,GAAD,OAAUA,EAAOmD,EAAWlE,EAAc,IAAMgE,EAAQ,MACjED,GAAQ,SAAChD,GAAD,OAAUA,EAAOf,QAE1B,CAACgE,EAAOE,EAAYlE,IAMvB,OAJAE,qBAAU,WACRiE,MACC,CAACA,EAAWnE,EAAa4D,IAErB,CAACA,EAAOC,EAAUC,EAAMC,EAASC,EAAOC,GFOWG,CANvC,yBAMZR,EANY,KAMLC,EANK,KAMKC,EANL,KAMWC,EANX,KAMoBC,EANpB,KAM2BC,EAN3B,KAUbI,EAAa,SAACzB,GACbjF,EAAeC,EAAQC,EAAO,CAAEE,EAAG6E,EAAK3E,EAAG,KAC9CyF,EAAgB,CAAE3F,EAAG6E,EAAK3E,EAAG,KAc3BqG,EAAO,WAEPR,EAAOE,EAAQ,IACjBC,GAAS,SAAClD,GAAD,OAAUA,EAAO,KAC1ByB,EAAY,KAAQwB,EAAQ,GAAK,MAE9BrG,EAAeC,EAAQC,EAAO,CAAEE,EAAG,EAAGE,EAAG,KAIxCL,EAAOQ,IAAIH,EAAI,IACjBsG,QAAQC,IAAI,eACZ/B,GAAY,GACZD,EAAY,OAEdkB,EAAgB,CAAE3F,EAAG,EAAGE,EAAG,EAAG0C,UAAU,KARxC+C,EAAgB,CAAE3F,EAAG,EAAGE,EAAG,EAAG0C,UAAU,KAyBtC8D,EAAO,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACT5C,IAEa,KAAZ4C,EACFL,GAAY,GACS,KAAZK,EACTL,EAAW,GACU,KAAZK,GAXblC,EAAY,MACZ8B,KAYyB,KAAZI,GACTf,EAAa9F,EAAO,KAS1B,OGjGkB,SAACuE,EAAUuC,GAC7B,IAAMC,EAAgBC,mBAEtB3E,qBAAU,WACR0E,EAAcE,QAAU1C,IACvB,CAACA,IAGJlC,qBAAU,WAIR,GAAc,OAAVyE,EAAgB,CAClB,IAAMI,EAAKC,aAJb,WACEJ,EAAcE,YAGeH,GAC7B,OAAO,WACLM,cAAcF,OAGjB,CAACJ,IH2EJO,EAAY,WACVZ,MACC/B,GAGD,kBAAClE,EAAD,CACE8G,KAAK,SACLC,SAAS,IACTC,UAAW,SAACC,GAAD,OAAOb,EAAKa,IACvBC,QArCU,SAAC,GAAiB,IAAfb,EAAc,EAAdA,QACV5C,GACa,KAAZ4C,GACFlC,EAAY,KAAQwB,EAAQ,GAAK,OAoCnC,kBAACrF,EAAD,MACA,kBAACH,EAAD,KACE,kBAAC,EAAD,CAAOX,MAAOA,IACd,+BACGiE,EACC,kBAAC,EAAD,CAASA,SAAUA,EAAUE,KAAK,cAElC,6BACE,kBAAC,EAAD,CAASA,KAAI,iBAAY4B,KACzB,kBAAC,EAAD,CAAS5B,KAAI,gBAAW8B,KACxB,kBAAC,EAAD,CAAS9B,KAAI,iBAAYgC,MAG7B,kBAAC,EAAD,CAAa5B,SAjFH,WAChBrC,EAASxC,KACTiF,EAAY,KACZ3C,IACA4C,GAAY,GACZoB,EAAS,GACTE,EAAQ,GACRE,EAAS,UIpCEuB,EANH,kBACV,yBAAKC,UAAU,OACb,kBAAC,EAAD,QCAJC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.7980fd2a.chunk.js","sourcesContent":["const STAGE_WIDTH = 12;\nconst STAGE_HEIGHT = 20;\n\nconst createStage = () =>\n  Array.from(Array(STAGE_HEIGHT), () =>\n    new Array(STAGE_WIDTH).fill([0, 'clear'])\n  );\n\nconst checkCollision = (player, stage, { x: moveX, y: moveY }) => {\n  for (let y = 0; y < player.tetromino.length; y += 1) {\n    for (let x = 0; x < player.tetromino[y].length; x += 1) {\n      // We're in the Tetromino cell\n      if (player.tetromino[y][x] !== 0) {\n        if (\n          // The move is inside the game area: vertical\n          !stage[y + player.pos.y + moveY] ||\n          // and horizontal\n          !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] ||\n          // We're not moving to a clear cell\n          stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !==\n            'clear'\n        ) {\n          return true;\n        }\n      }\n    }\n  }\n};\n\nexport { STAGE_WIDTH, STAGE_HEIGHT, createStage, checkCollision };\n","import styled, { keyframes } from 'styled-components';\n\nconst StyledTetrisWrapper = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background: radial-gradient(ellipse at bottom, #1b2735 0%, #090a0f 100%);\n  background-size: cover;\n  overflow: hidden;\n`;\n\nconst StyledTetris = styled.div`\n  display: flex;\n  align-items: flex-start;\n  padding: 30px;\n  margin: 0 auto;\n  max-width: 700px;\n\n  aside {\n    width: 100%;\n    max-width: 100px;\n    display: block;\n    padding: 0 10px;\n  }\n`;\n\nconst animStar = keyframes`\n  from {\n    transform: translateY(0px);\n  }\n  to {\n    transform: translateY(500px);\n  }\n`;\n\nconst StyledStar = styled.div`\n  width: 2px;\n  height: 2px;\n  background: transparent;\n  box-shadow: 236px 1043px #fff, 784px 298px #fff, 594px 611px #fff,\n    1790px 363px #fff, 1099px 831px #fff, 1619px 474px #fff, 903px 652px #fff,\n    1472px 978px #fff, 1620px 1445px #fff, 1533px 1396px #fff, 303px 994px #fff,\n    318px 1761px #fff, 1755px 263px #fff, 783px 482px #fff, 1224px 216px #fff,\n    1625px 1456px #fff, 813px 1703px #fff, 1918px 1212px #fff, 1872px 799px #fff,\n    280px 793px #fff, 1932px 99px #fff, 1925px 1863px #fff, 1444px 809px #fff,\n    879px 484px #fff, 1283px 1275px #fff, 154px 1516px #fff, 1986px 404px #fff,\n    526px 774px #fff, 540px 664px #fff, 953px 1818px #fff, 1931px 1100px #fff,\n    1105px 92px #fff, 1290px 210px #fff, 1739px 33px #fff, 466px 1203px #fff,\n    1821px 139px #fff, 1524px 269px #fff, 777px 1345px #fff, 116px 29px #fff,\n    692px 10px #fff, 1165px 1444px #fff, 230px 1666px #fff, 1293px 811px #fff,\n    1349px 414px #fff, 1598px 785px #fff, 1058px 1829px #fff, 1995px 1740px #fff,\n    947px 614px #fff, 141px 1062px #fff, 1167px 248px #fff, 1366px 1098px #fff,\n    811px 1344px #fff, 1723px 872px #fff, 1450px 1137px #fff, 1225px 1762px #fff,\n    1766px 144px #fff, 1160px 1662px #fff, 931px 589px #fff, 937px 579px #fff,\n    941px 592px #fff, 864px 681px #fff, 41px 995px #fff, 761px 1239px #fff,\n    1890px 1598px #fff, 1262px 1800px #fff, 1990px 990px #fff, 1259px 880px #fff,\n    1151px 1318px #fff, 352px 1485px #fff, 1345px 876px #fff, 1446px 945px #fff,\n    1259px 1789px #fff, 1290px 374px #fff, 1388px 717px #fff, 32px 1673px #fff,\n    1204px 862px #fff, 1184px 1186px #fff, 514px 574px #fff, 1625px 279px #fff,\n    1491px 1821px #fff, 990px 398px #fff, 1552px 1243px #fff, 1427px 1528px #fff,\n    222px 808px #fff, 732px 190px #fff, 12px 1378px #fff, 964px 444px #fff,\n    317px 267px #fff, 1193px 161px #fff, 401px 716px #fff, 1399px 901px #fff,\n    547px 318px #fff, 1365px 1943px #fff, 1083px 1137px #fff, 689px 251px #fff,\n    833px 1431px #fff, 236px 177px #fff, 103px 1987px #fff, 320px 1421px #fff,\n    1938px 1277px #fff, 1738px 1755px #fff, 777px 1942px #fff, 480px 1451px #fff,\n    905px 1958px #fff, 993px 1429px #fff, 1748px 1796px #fff, 1596px 79px #fff,\n    1355px 140px #fff, 1914px 261px #fff, 1027px 1239px #fff, 242px 534px #fff,\n    1557px 192px #fff, 1884px 88px #fff, 1602px 296px #fff, 872px 307px #fff,\n    998px 1373px #fff, 38px 1192px #fff, 763px 516px #fff, 1463px 925px #fff,\n    1554px 147px #fff, 1322px 2000px #fff, 1885px 555px #fff, 1092px 1729px #fff,\n    259px 735px #fff, 1852px 295px #fff, 49px 1307px #fff, 1111px 1808px #fff,\n    1939px 643px #fff, 440px 1370px #fff, 1386px 657px #fff, 968px 611px #fff,\n    1270px 1739px #fff, 870px 392px #fff, 1257px 765px #fff, 1106px 1530px #fff,\n    1232px 1910px #fff, 1901px 1368px #fff, 1027px 1105px #fff,\n    1787px 368px #fff, 735px 375px #fff, 1475px 825px #fff, 1836px 518px #fff,\n    349px 1667px #fff, 1260px 495px #fff, 1799px 1574px #fff, 1018px 682px #fff,\n    648px 995px #fff, 935px 577px #fff, 156px 1690px #fff, 602px 1920px #fff,\n    1876px 384px #fff, 1561px 1362px #fff, 1446px 632px #fff, 1923px 209px #fff,\n    1076px 1611px #fff, 738px 722px #fff, 1484px 1655px #fff, 137px 1339px #fff,\n    1721px 541px #fff, 1544px 1082px #fff, 1083px 1601px #fff,\n    1475px 1526px #fff, 1653px 1500px #fff, 451px 1136px #fff, 288px 372px #fff,\n    290px 810px #fff, 1492px 814px #fff, 1508px 1379px #fff, 730px 1116px #fff,\n    505px 929px #fff, 1775px 1887px #fff, 1942px 1091px #fff, 927px 1676px #fff,\n    406px 992px #fff, 983px 626px #fff, 1356px 741px #fff, 1609px 936px #fff,\n    313px 1244px #fff, 616px 984px #fff, 713px 1281px #fff, 1050px 844px #fff,\n    1010px 104px #fff, 1858px 547px #fff, 429px 1678px #fff, 916px 763px #fff,\n    418px 378px #fff, 7px 631px #fff, 1702px 1288px #fff, 799px 987px #fff,\n    1661px 1081px #fff, 1655px 1846px #fff, 361px 1676px #fff,\n    1979px 1521px #fff, 415px 418px #fff, 1641px 1999px #fff, 955px 882px #fff,\n    1290px 324px #fff, 930px 1826px #fff, 989px 807px #fff, 461px 917px #fff;\n  animation: ${animStar} 100s linear infinite;\n\n  :after {\n    content: ' ';\n    position: absolute;\n    top: -1000px;\n    width: 2px;\n    height: 2px;\n    background: transparent;\n    box-shadow: 236px 1043px #fff, 784px 298px #fff, 594px 611px #fff,\n      1790px 363px #fff, 1099px 831px #fff, 1619px 474px #fff, 903px 652px #fff,\n      1472px 978px #fff, 1620px 1445px #fff, 1533px 1396px #fff,\n      303px 994px #fff, 318px 1761px #fff, 1755px 263px #fff, 783px 482px #fff,\n      1224px 216px #fff, 1625px 1456px #fff, 813px 1703px #fff,\n      1918px 1212px #fff, 1872px 799px #fff, 280px 793px #fff, 1932px 99px #fff,\n      1925px 1863px #fff, 1444px 809px #fff, 879px 484px #fff,\n      1283px 1275px #fff, 154px 1516px #fff, 1986px 404px #fff, 526px 774px #fff,\n      540px 664px #fff, 953px 1818px #fff, 1931px 1100px #fff, 1105px 92px #fff,\n      1290px 210px #fff, 1739px 33px #fff, 466px 1203px #fff, 1821px 139px #fff,\n      1524px 269px #fff, 777px 1345px #fff, 116px 29px #fff, 692px 10px #fff,\n      1165px 1444px #fff, 230px 1666px #fff, 1293px 811px #fff,\n      1349px 414px #fff, 1598px 785px #fff, 1058px 1829px #fff,\n      1995px 1740px #fff, 947px 614px #fff, 141px 1062px #fff, 1167px 248px #fff,\n      1366px 1098px #fff, 811px 1344px #fff, 1723px 872px #fff,\n      1450px 1137px #fff, 1225px 1762px #fff, 1766px 144px #fff,\n      1160px 1662px #fff, 931px 589px #fff, 937px 579px #fff, 941px 592px #fff,\n      864px 681px #fff, 41px 995px #fff, 761px 1239px #fff, 1890px 1598px #fff,\n      1262px 1800px #fff, 1990px 990px #fff, 1259px 880px #fff,\n      1151px 1318px #fff, 352px 1485px #fff, 1345px 876px #fff,\n      1446px 945px #fff, 1259px 1789px #fff, 1290px 374px #fff,\n      1388px 717px #fff, 32px 1673px #fff, 1204px 862px #fff, 1184px 1186px #fff,\n      514px 574px #fff, 1625px 279px #fff, 1491px 1821px #fff, 990px 398px #fff,\n      1552px 1243px #fff, 1427px 1528px #fff, 222px 808px #fff, 732px 190px #fff,\n      12px 1378px #fff, 964px 444px #fff, 317px 267px #fff, 1193px 161px #fff,\n      401px 716px #fff, 1399px 901px #fff, 547px 318px #fff, 1365px 1943px #fff,\n      1083px 1137px #fff, 689px 251px #fff, 833px 1431px #fff, 236px 177px #fff,\n      103px 1987px #fff, 320px 1421px #fff, 1938px 1277px #fff,\n      1738px 1755px #fff, 777px 1942px #fff, 480px 1451px #fff,\n      905px 1958px #fff, 993px 1429px #fff, 1748px 1796px #fff, 1596px 79px #fff,\n      1355px 140px #fff, 1914px 261px #fff, 1027px 1239px #fff, 242px 534px #fff,\n      1557px 192px #fff, 1884px 88px #fff, 1602px 296px #fff, 872px 307px #fff,\n      998px 1373px #fff, 38px 1192px #fff, 763px 516px #fff, 1463px 925px #fff,\n      1554px 147px #fff, 1322px 2000px #fff, 1885px 555px #fff,\n      1092px 1729px #fff, 259px 735px #fff, 1852px 295px #fff, 49px 1307px #fff,\n      1111px 1808px #fff, 1939px 643px #fff, 440px 1370px #fff,\n      1386px 657px #fff, 968px 611px #fff, 1270px 1739px #fff, 870px 392px #fff,\n      1257px 765px #fff, 1106px 1530px #fff, 1232px 1910px #fff,\n      1901px 1368px #fff, 1027px 1105px #fff, 1787px 368px #fff,\n      735px 375px #fff, 1475px 825px #fff, 1836px 518px #fff, 349px 1667px #fff,\n      1260px 495px #fff, 1799px 1574px #fff, 1018px 682px #fff, 648px 995px #fff,\n      935px 577px #fff, 156px 1690px #fff, 602px 1920px #fff, 1876px 384px #fff,\n      1561px 1362px #fff, 1446px 632px #fff, 1923px 209px #fff,\n      1076px 1611px #fff, 738px 722px #fff, 1484px 1655px #fff,\n      137px 1339px #fff, 1721px 541px #fff, 1544px 1082px #fff,\n      1083px 1601px #fff, 1475px 1526px #fff, 1653px 1500px #fff,\n      451px 1136px #fff, 288px 372px #fff, 290px 810px #fff, 1492px 814px #fff,\n      1508px 1379px #fff, 730px 1116px #fff, 505px 929px #fff,\n      1775px 1887px #fff, 1942px 1091px #fff, 927px 1676px #fff,\n      406px 992px #fff, 983px 626px #fff, 1356px 741px #fff, 1609px 936px #fff,\n      313px 1244px #fff, 616px 984px #fff, 713px 1281px #fff, 1050px 844px #fff,\n      1010px 104px #fff, 1858px 547px #fff, 429px 1678px #fff, 916px 763px #fff,\n      418px 378px #fff, 7px 631px #fff, 1702px 1288px #fff, 799px 987px #fff,\n      1661px 1081px #fff, 1655px 1846px #fff, 361px 1676px #fff,\n      1979px 1521px #fff, 415px 418px #fff, 1641px 1999px #fff, 955px 882px #fff,\n      1290px 324px #fff, 930px 1826px #fff, 989px 807px #fff, 461px 917px #fff;\n  }\n`;\n\nexport { StyledTetrisWrapper, StyledTetris, StyledStar };\n","const TETROMINOS = {\n  0: { shape: [[0]], color: '0, 0, 0' },\n  I: {\n    shape: [\n      [0, 'I', 0, 0],\n      [0, 'I', 0, 0],\n      [0, 'I', 0, 0],\n      [0, 'I', 0, 0],\n    ],\n    color: '80, 227, 230',\n  },\n  J: {\n    shape: [\n      [0, 'J', 0],\n      [0, 'J', 0],\n      ['J', 'J', 0],\n    ],\n    color: '36, 95, 223',\n  },\n  L: {\n    shape: [\n      [0, 'L', 0],\n      [0, 'L', 0],\n      [0, 'L', 'L'],\n    ],\n    color: '223, 173, 36',\n  },\n  O: {\n    shape: [\n      ['O', 'O'],\n      ['O', 'O'],\n    ],\n    color: '223, 217, 36',\n  },\n  S: {\n    shape: [\n      [0, 'S', 'S'],\n      ['S', 'S', 0],\n      [0, 0, 0],\n    ],\n    color: '48, 211, 56',\n  },\n  T: {\n    shape: [\n      [0, 0, 0],\n      ['T', 'T', 'T'],\n      [0, 'T', 0],\n    ],\n    color: '132, 61, 198',\n  },\n  Z: {\n    shape: [\n      ['Z', 'Z', 0],\n      [0, 'Z', 'Z'],\n      [0, 0, 0],\n    ],\n    color: '227, 78, 78',\n  },\n};\n\nconst randomTetromino = () => {\n  const tetrominos = 'IJLOSTZ';\n  const randomLetter =\n    tetrominos[Math.floor(Math.random() * tetrominos.length)];\n  return TETROMINOS[randomLetter];\n};\n\nexport { TETROMINOS, randomTetromino };\n","import { useState, useEffect } from 'react';\nimport { createStage } from '../gameHelpers';\n\nconst useStage = (player, resetPlayer) => {\n  const [stage, setStage] = useState(createStage());\n  const [rowsCleared, setRowsCleared] = useState(0);\n\n  useEffect(() => {\n    setRowsCleared(0);\n    const sweepRows = (newStage) =>\n      newStage.reduce((acc, row) => {\n        if (row.findIndex((cell) => cell[0] === 0) === -1) {\n          setRowsCleared((prev) => prev + 1);\n          acc.unshift(new Array(newStage[0].length).fill([0, 'clear']));\n          return acc;\n        }\n        acc.push(row);\n        return acc;\n      }, []);\n    const updateStage = (prevStage) => {\n      // First flush the stage\n      const newStage = prevStage.map((row) =>\n        row.map((cell) => (cell[1] === 'clear' ? [0, 'clear'] : cell))\n      );\n\n      // Then draw the tetromino\n      player.tetromino.forEach((row, y) => {\n        row.forEach((value, x) => {\n          if (value !== 0) {\n            newStage[y + player.pos.y][x + player.pos.x] = [\n              value,\n              `${player.collided ? 'merged' : 'clear'}`,\n            ];\n          }\n        });\n      });\n\n      // Then check if we collided\n      if (player.collided) {\n        resetPlayer();\n        return sweepRows(newStage);\n      }\n\n      return newStage;\n    };\n\n    setStage((prev) => updateStage(prev));\n  }, [player, resetPlayer]);\n\n  return [stage, setStage, rowsCleared];\n};\n\nexport { useStage };\n","import styled from 'styled-components';\n\nconst StyledStage = styled.div`\n  display: grid;\n  grid-template-rows: repeat(\n    ${(props) => props.height},\n    calc(25vw / ${(props) => props.width})\n  );\n  grid-template-columns: repeat(${(props) => props.width}, 1fr);\n  grid-gap: 1px;\n  border: 2px solid #333;\n  width: 100%;\n  max-width: 25vw \n  background: #111;\n`;\n\nexport { StyledStage };\n","import styled from 'styled-components';\n\nconst StyledCell = styled.div`\n  width: auto;\n  background: rgba(${(props) => props.color}, 0.8);\n  border: ${(props) => (!props.type ? '0px solid' : '4px solid')};\n  border-bottom-color: rgba(${(props) => props.color}, 0.1);\n  border-right-color: rgba(${(props) => props.color}, 1);\n  border-top-color: rgba(${(props) => props.color}, 1);\n  border-left-color: rgba(${(props) => props.color}, 0.3);\n`;\n\nexport { StyledCell };\n","import React from 'react';\nimport { StyledCell } from './styles/StyledCell';\nimport { TETROMINOS } from '../tetrominos';\n\nconst Cell = ({ type }) => (\n  <StyledCell type={type} color={TETROMINOS[type].color} />\n);\n\nexport default React.memo(Cell);\n","import React from 'react';\nimport { StyledStage } from './styles/StyledStage';\n\nimport Cell from './Cell';\n\nconst Stage = ({ stage }) => (\n  <StyledStage width={stage[0].length} height={stage.length}>\n    {stage.map((row) => row.map((cell, x) => <Cell key={x} type={cell[0]} />))}\n  </StyledStage>\n);\n\nexport default Stage;\n","import styled from 'styled-components';\n\nconst StyledDisplay = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  align-items: center;\n  margin: 0 0 20px 0;\n  padding: 20px;\n  border: 4px solid #333;\n  min-height: 30px;\n  width: 100%;\n  border-radius: 20px;\n  color: ${(props) => (props.gameOver ? 'red' : '#999')};\n  background: #000;\n  font-family: Arial, Helvetica, sans-serif;\n  font-size: 0.8rem;\n`;\n\nexport { StyledDisplay };\n","import React from 'react';\nimport { StyledDisplay } from './styles/StyledDisplay';\n\nconst Display = ({ gameOver, text }) => (\n  <StyledDisplay gameOver={gameOver}>{text}</StyledDisplay>\n);\n\nexport default Display;\n","import styled from 'styled-components';\n\nconst StyledStartButton = styled.button`\n  box-sizing: border-box;\n  margin: 0 0 20px 0;\n  padding: 20px;\n  min-height: 20px;\n  width: 100%;\n  border-radius: 20px;\n  border: none;\n  color: white;\n  background: #333;\n  font-family: Arial, Helvetica, sans-serif;\n  font-size: 0.8rem;\n  outline: none;\n  cursor: pointer;\n`;\n\nexport { StyledStartButton };\n","import React from 'react';\nimport { StyledStartButton } from './styles/StyledStartButton';\n\nconst StartButton = ({ callback }) => (\n  <StyledStartButton onClick={callback}>Start</StyledStartButton>\n);\n\nexport default StartButton;\n","import React, { useState } from 'react';\n\nimport { createStage, checkCollision } from '../gameHelpers';\n\n// Styled Components\nimport {\n  StyledTetrisWrapper,\n  StyledTetris,\n  StyledStar,\n} from './styles/StyledTetris';\n\n// Custom Hooks\nimport { useInterval } from '../hooks/useInterval';\nimport { usePlayer } from '../hooks/usePlayer';\nimport { useStage } from '../hooks/useStage';\nimport { useGameStatus } from '../hooks/useGameStatus';\n\n// Components\nimport Stage from './Stage';\nimport Display from './Display';\nimport StartButton from './StartButton';\n\nconst Tetris = () => {\n  const [dropTime, setDropTime] = useState(null);\n  const [gameOver, setGameOver] = useState(false);\n\n  const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\n  const [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\n  const [score, setScore, rows, setRows, level, setLevel] = useGameStatus(\n    rowsCleared\n  );\n\n  const movePlayer = (dir) => {\n    if (!checkCollision(player, stage, { x: dir, y: 0 })) {\n      updatePlayerPos({ x: dir, y: 0 });\n    }\n  };\n\n  const startGame = () => {\n    setStage(createStage());\n    setDropTime(1000);\n    resetPlayer();\n    setGameOver(false);\n    setScore(0);\n    setRows(0);\n    setLevel(0);\n  };\n\n  const drop = () => {\n    // Increase level & speed as player has cleared 10 rows\n    if (rows > level + 1) {\n      setLevel((prev) => prev + 1);\n      setDropTime(1000 / (level + 1) + 200);\n    }\n    if (!checkCollision(player, stage, { x: 0, y: 1 })) {\n      updatePlayerPos({ x: 0, y: 1, collided: false });\n    } else {\n      // Game Over\n      if (player.pos.y < 1) {\n        console.log('GAME OVER!!');\n        setGameOver(true);\n        setDropTime(null);\n      }\n      updatePlayerPos({ x: 0, y: 0, collided: true });\n    }\n  };\n\n  const keyUp = ({ keyCode }) => {\n    if (!gameOver) {\n      if (keyCode === 40) {\n        setDropTime(1000 / (level + 1) + 200);\n      }\n    }\n  };\n\n  const dropPlayer = () => {\n    setDropTime(null);\n    drop();\n  };\n\n  const move = ({ keyCode }) => {\n    if (!gameOver) {\n      // Keys: 37 - left; 39 - right; 40 - down\n      if (keyCode === 37) {\n        movePlayer(-1);\n      } else if (keyCode === 39) {\n        movePlayer(1);\n      } else if (keyCode === 40) {\n        dropPlayer();\n      } else if (keyCode === 38) {\n        playerRotate(stage, 1);\n      }\n    }\n  };\n\n  useInterval(() => {\n    drop();\n  }, dropTime);\n\n  return (\n    <StyledTetrisWrapper\n      role=\"button\"\n      tabIndex=\"0\"\n      onKeyDown={(e) => move(e)}\n      onKeyUp={keyUp}\n    >\n      <StyledStar />\n      <StyledTetris>\n        <Stage stage={stage} />\n        <aside>\n          {gameOver ? (\n            <Display gameOver={gameOver} text=\"Game Over\" />\n          ) : (\n            <div>\n              <Display text={`Score: ${score}`} />\n              <Display text={`Rows: ${rows}`} />\n              <Display text={`Level: ${level}`} />\n            </div>\n          )}\n          <StartButton callback={startGame} />\n        </aside>\n      </StyledTetris>\n    </StyledTetrisWrapper>\n  );\n};\n\nexport default Tetris;\n","import { useState, useCallback } from 'react';\n\nimport { checkCollision, STAGE_WIDTH } from '../gameHelpers';\nimport { TETROMINOS, randomTetromino } from '../tetrominos';\n\nconst usePlayer = () => {\n  const [player, setPlayer] = useState({\n    pos: { x: 0, y: 0 },\n    tetromino: TETROMINOS[0].shape,\n    collided: false,\n  });\n\n  const rotate = (tetromino, dir) => {\n    // Transpose: rows to cols\n    const rotatedTetro = tetromino.map((_, index) =>\n      tetromino.map((col) => col[index])\n    );\n    // Reverse each row\n    if (dir > 0) return rotatedTetro.map((row) => row.reverse());\n  };\n\n  const playerRotate = (stage, dir) => {\n    const clonedPlayer = JSON.parse(JSON.stringify(player));\n    clonedPlayer.tetromino = rotate(clonedPlayer.tetromino, dir);\n\n    const pos = clonedPlayer.pos.x;\n    let offset = 1;\n    while (checkCollision(clonedPlayer, stage, { x: 0, y: 0 })) {\n      clonedPlayer.pos.x += offset;\n      offset = -(offset + (offset > 0 ? 1 : -1));\n      if (offset > clonedPlayer.tetromino[0].length) {\n        rotate(clonedPlayer.tetromino, -dir);\n        clonedPlayer.pos.x = pos;\n        return;\n      }\n    }\n\n    setPlayer(clonedPlayer);\n  };\n\n  const updatePlayerPos = ({ x, y, collided }) => {\n    setPlayer((prev) => ({\n      ...prev,\n      pos: { x: (prev.pos.x += x), y: (prev.pos.y += y) },\n      collided,\n    }));\n  };\n\n  const resetPlayer = useCallback(() => {\n    setPlayer({\n      pos: { x: STAGE_WIDTH / 2 - 2, y: 0 },\n      tetromino: randomTetromino().shape,\n      collided: false,\n    });\n  }, []);\n\n  return [player, updatePlayerPos, resetPlayer, playerRotate];\n};\n\nexport { usePlayer };\n","import { useState, useEffect, useCallback } from 'react';\n\nconst useGameStatus = (rowsCleared) => {\n  const [score, setScore] = useState(0);\n  const [rows, setRows] = useState(0);\n  const [level, setLevel] = useState(0);\n\n  // Points by how many rows are cleared\n  const linePoints = [40, 100, 300, 1200];\n\n  const calcScore = useCallback(() => {\n    if (rowsCleared > 0) {\n      setScore((prev) => prev + linePoints[rowsCleared - 1] * (level + 1));\n      setRows((prev) => prev + rowsCleared);\n    }\n  }, [level, linePoints, rowsCleared]);\n\n  useEffect(() => {\n    calcScore();\n  }, [calcScore, rowsCleared, score]);\n\n  return [score, setScore, rows, setRows, level, setLevel];\n};\n\nexport { useGameStatus };\n","import { useEffect, useRef } from 'react';\n\nconst useInterval = (callback, delay) => {\n  const savedCallback = useRef();\n  // Remember the latest callback\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n};\n\nexport { useInterval };\n","import React from 'react';\nimport Tetris from './components/Tetris';\n\nconst App = () => (\n  <div className=\"App\">\n    <Tetris />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}